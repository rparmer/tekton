---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: kustomize
spec:
  workspaces:
    - name: source
  params:
    - name: path
      description: path in workspace to find kustomization file
      type: string
      default: ""
    - name: args
      description: kustomize command arguments
      type: array
  steps:
    - name: kustomize
      image: k8s.gcr.io/kustomize/kustomize:v3.8.7
      workingDir: $(workspaces.source.path)/$(params.path)
      command: ["/app/kustomize"]
      args: ["$(params.args[*])"]
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: envsubst
spec:
  workspaces:
    - name: source
  params:
    - name: tpl-filepath
      description: path in workspace to tpl file
      type: string
    - name: output-filepath
      description: path in workspace to output tpl file
      type: string
  steps:
    - name: envsubst
      image: ghcr.io/rparmer/envsubst
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env sh
        envsubst < $(params.tpl-filepath) > $(params.output-filepath)
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: helm-release
spec:
  workspaces:
    - name: source
    - name: gh-pages
  params:
    - name: chart-dir
      type: string
    - name: version
      type: string
    - name: repo-url
      type: string
    - name: release-message
      type: string
      default: release new helm chart
    - name: GIT_USER_EMAIL
      type: string
      default: <>
    - name: GIT_USER_NAME
      type: string
      default: tekton-automation
  results:
    - name: version
  steps:
    - name: package
      image: alpine/helm
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env sh
        helm package $(params.chart-dir) --version $(params.version) --app-version $(params.version)
    - name: index
      image: alpine/helm
      workingDir: $(workspaces.gh-pages.path)
      script: |
        #!/usr/bin/env sh
        cp $(workspaces.source.path)/*.tgz .
        helm repo index --url $(params.repo-url) --merge index.yaml .
        echo "${VERSION}" | tee $(results.version.path)
    - name: release
      image: alpine/git
      workingDir: $(workspaces.gh-pages.path)
      script: |
        #!/usr/bin/env sh
        set -e
        git config --global user.email "$(params.GIT_USER_EMAIL)"
        git config --global user.name "$(params.GIT_USER_NAME)"
        git config --global --add safe.directory /workspace/gh-pages
        git add .
        git commit -m "$(params.release-message)"
        git push origin HEAD:gh-pages
  